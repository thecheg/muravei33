{"version":3,"file":"lenis.mjs","sources":["../src/maths.js","../src/animate.js","../src/observed-element.js","../src/virtual-scroll.js","../src/nanoevents.js","../src/index.js"],"sourcesContent":["// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n","import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n","export class ObservedElement {\n  constructor(element) {\n    this.element = element\n\n    // If the element is the window, add a resize event listener and trigger it initially\n    if (element === window) {\n      window.addEventListener('resize', this.onWindowResize)\n      this.onWindowResize()\n    } else {\n      // If the element is not the window, observe its size using ResizeObserver\n      this.width = this.element.offsetWidth\n      this.height = this.element.offsetHeight\n\n      this.resizeObserver = new ResizeObserver(this.onResize)\n      this.resizeObserver.observe(this.element)\n    }\n  }\n\n  // Clean up event listeners and disconnect the ResizeObserver when destroying the instance\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize)\n    this.resizeObserver.disconnect()\n  }\n\n  // Update the width and height properties based on the observed element's size\n  onResize = ([entry]) => {\n    if (entry) {\n      const { width, height } = entry.contentRect\n      this.width = width\n      this.height = height\n    }\n  }\n\n  // Update the width and height properties based on the window's size\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n}\n","import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { pageX, pageY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = pageX\n    this.touchStart.y = pageY\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { pageX, pageY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(pageX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(pageY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = pageX\n    this.touchStart.y = pageY\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n","export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n","import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { ObservedElement } from './observed-element'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 2,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = true,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      smoothWheel,\n      smoothTouch,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.wrapper = new ObservedElement(wrapper)\n    this.content = new ObservedElement(content)\n\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.wrapper.element.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wrapper, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.wrapper.element.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    // keep previous/next page gesture on trackpads\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      (this.options.smoothTouch && type === 'touch') ||\n      (this.options.smoothWheel && type === 'wheel')\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    this.scrollTo(this.targetScroll + delta, { programmatic: false })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.wrapper.element !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.wrapper.element.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.animate.stop()\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.wrapper.element === window\n      ? this.content.element\n      : this.wrapper.element\n  }\n\n  get limit() {\n    return Math.round(\n      this.isHorizontal\n        ? this.content.width - this.wrapper.width\n        : this.content.height - this.wrapper.height\n    )\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    return this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n"],"names":["clamp","min","input","max","Math","Animate","_proto","prototype","advance","deltaTime","_this$onUpdate","this","isRunning","amt","completed","lerp","value","to","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","_ref","_ref$lerp","_ref$duration","_ref$easing","t","ObservedElement","element","_this","onResize","entry","_entry$contentRect","contentRect","height","width","onWindowResize","window","innerWidth","innerHeight","addEventListener","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","destroy","removeEventListener","disconnect","VirtualScroll","_ref$wheelMultiplier","wheelMultiplier","_ref$touchMultiplier","touchMultiplier","_ref$normalizeWheel","normalizeWheel","onTouchStart","event","_ref2","targetTouches","pageY","touchStart","x","pageX","y","onTouchMove","_ref3","deltaX","deltaY","emitter","emit","type","onWheel","events","callbacks","i","length","apply","slice","arguments","on","cb","_this$events$event","push","_this$events$event2","filter","passive","callback","Lenis","_temp","direction","gestureDirection","mouseMultiplier","smooth","_ref$wrapper","wrapper","_ref$content","content","document","documentElement","_ref$smoothWheel","smoothWheel","_ref$smoothTouch","smoothTouch","pow","_ref$infinite","infinite","_ref$orientation","orientation","_ref$gestureOrientati","gestureOrientation","onVirtualScroll","ctrlKey","options","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","scrollTo","targetScroll","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","velocity","sign","console","warn","lenisVersion","body","rootElement","classList","add","virtualScroll","off","_this$emitter$events$","setScroll","scroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","_temp2","_this2","_ref3$offset","offset","_ref3$immediate","immediate","_ref3$lock","lock","_ref3$duration","_ref3$easing","_ref3$lerp","_ref3$onComplete","onComplete","_ref3$force","force","_ref3$programmatic","includes","limit","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","_ref4","requestAnimationFrame","key","get","remainder","divisor","__isSmooth","set","toggle","__isScrolling","__isStopped"],"mappings":"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"}